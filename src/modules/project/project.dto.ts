import { IsNotEmpty, IsString } from 'class-validator';

import { User } from '../user/user.dto';

// collection Project {
//   id: string;
//   owner:User;
//   name: string;
//   url?: string;
//   created: string;
//   updated: string;
// }

export class PolybaseProject {
  /**
   * The project's UUID
   * @example '12345678-1234-1234-1234-123456789012'
   */
  id: string;

  /**
   * The project's owner
   */
  owner: User;

  /**
   * The project's name
   * @example 'Picasso Project'
   */
  name: string;

  /**
   * The project's url
   * @example 'https://attribute.io'
   */
  url: string;

  /**
   * The date the project was created
   * @example '2021-01-01T00:00:00.000Z'
   */
  created: string;

  /**
   * The date the project was updated
   * @example '2021-01-01T00:00:00.000Z'
   */
  updated: string;
}

export class ProjectDto {
  /**
   * Title of the project
   * @example "Picasso Project"
   */
  @IsNotEmpty()
  @IsString()
  name: string;

  /**
   * URL of the project
   * @example "https://attribute.io"
   */
  @IsString()
  url: string;
}

export class CreateProject extends ProjectDto {
  // The user is not expected to insert the id of the project
  //   @IsNotEmpty()
  //   @IsString()
  //   id: string;
  // We will see how we will do owner, but for now we already get it from the token generated by the user
  //   @IsNotEmpty()
  //   @ValidateNested()
  //   @Type(() => User)
  //   owner: User;
}

export class UpdateProject extends ProjectDto {}
